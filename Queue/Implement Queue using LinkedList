TC - O(1) all operations
SC - O(n)

class GFG {
    static class Node{
        int val;
        Node next;
        
        public Node(int val)
        {
            this.val = val;
            next = null;
        }
    }
    
    static class Queue
    {
        static Node head = null;
        static Node tail = null;
        
        public static boolean isEmpty()
        {
            return head == null && tail == null;
        }
        
        public void add(int val)
        {
            Node newNode = new Node(val);
            
            if(tail == null)
            {
                head = tail = newNode;
            }
            
            tail.next = newNode;
            tail = newNode;
        }
        
        public int remove()
        {
            if(isEmpty())
            {
                System.out.println("Empty queue");
                return -1;
            }
            
            int front = head.val;
            if(head == tail)
            {
                tail = null;
            }
            
            head = head.next;
            return front;
        }
        
        public int peek()
        {
            if(isEmpty())
            {
                System.out.println("Empty queue");
                return -1;
            }
            
            return head.val;
        }
    }
    
    public static void main (String[] args) {
		
		Queue q = new Queue();
		q.add(1);
		q.add(2);
		q.add(3);
		q.add(4);
		q.add(5);
		
		while(!q.isEmpty())
		{
		    
		    System.out.println(q.remove());
		}
	}
        
}
