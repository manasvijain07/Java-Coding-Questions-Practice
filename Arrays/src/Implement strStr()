Implement strStr().

Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

Clarification:

What should we return when needle is an empty string? This is a great question to ask during an interview.

For the purpose of this problem, we will return 0 when needle is an empty string. This is consistent to C's strstr() and Java's indexOf().

 

Example 1:

Input: haystack = "hello", needle = "ll"
Output: 2
Example 2:

Input: haystack = "aaaaa", needle = "bba"
Output: -1
 

Constraints:

1 <= haystack.length, needle.length <= 104
haystack and needle consist of only lowercase English characters.


--------------------------------

Solution 1 - 
TC - O(m * n)
SC - O(1)

class Solution {
    public int strStr(String haystack, String needle) {
        int hlen = haystack.length();
        int nlen = needle.length();
        
        if(needle == null || nlen == 0)
            return 0;
        
        if(haystack == null || hlen == 0)
            return -1;
        
        int j = 0;
        
        for(int i = 0; i < haystack.length(); i++)
        {
            char c = haystack.charAt(i);
            if(c == needle.charAt(0))
            {
                int p = 0;
                
                if(haystack.substring(i).length() < nlen)
                {
                    return -1;    
                }
                
                while(p < nlen && needle.charAt(p) == haystack.charAt(i + p))
                {
                    p++;
                }
                
                if(p == nlen)
                    return i;
            }
        }
        
        return -1;
    }
}
